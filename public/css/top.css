@media screen and (max-width: 1000px) {
  body {
    font-family: Hannotate SC;
  }
  .cssbk {
    display: flex;
    flex-direction: column;
  }

  .cssbk > label {
    display: flex;
    flex-direction: column;
    /* width: 500px; */
    width: 100%; /* 親要素内いっぱいにする */
    height: 1400px;
    border: 1px solid black;
    margin-bottom: 10px;
  }

  .cssbk > label > input[type='checkbox'] {
    display: none;
  }

  .cssbk > label > span {
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    height: 50%;
  }

  .cssbk > label > span > .content {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    background-color: #fff; /* 背景色 */
    background-image: linear-gradient(
        90deg,
        transparent 0%,
        transparent 50%,
        #fff 50%,
        #fff 100%
      ),
      /* 点線1の色 */
        linear-gradient(180deg, rgb(30, 194, 219) 1px, transparent 0.8px); /* 点線2の色と太さ */
    background-size: 8px 100%, /* 点線1のサイズ */ 100% 2.5em; /* 点線2のサイズ */
    line-height: 2.5em; /* 文字の高さ */
    padding-bottom: 1px; /* 最終行の下にも罫線を引く */
    height: 100%;
    padding: 30px;
    box-sizing: border-box;
  }

  .note {
    border-top: 1px solid black;
    padding: 20px;
    background-color: #fff;
    box-sizing: border-box;
  }
}

@media screen and (min-width: 1000px) {
  body {
    overflow: hidden;
    font-family: Hannotate SC;
  }

  input,
  select,
  textarea {
    font-family: Hannotate SC;
  }

  button {
    font-family: Hannotate SC;
    color: white;
  }

  .cssbk {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 1000px;
    height: 700px;
  }

  .cssbk input {
    display: none;
  }

  .cssbk input ~ span {
    transition: 1.5s;
    -webkit-backface-visibility: hidden; /*要素が回転した場合に裏面が見えなくなる*/
    backface-visibility: hidden; /*要素が回転した場合に裏面が見えなくなる*/
    position: absolute;
    width: 50%;
    height: 100%;
    background-color: #ffffff;
    border: 1px solid black;
  }

  .cssbk input + span {
    left: 50%;
    /*下記２行で親要素を基準にして、子要素を左端を原点として水平方向に回転させ、遠近感を持たせる効果を持った変形を行う*/
    transform-origin: left;
    transform: perspective(1500px) rotateY(0deg);
  }
  .cssbk input + span + span {
    right: 50%;
    transform-origin: right;
    transform: perspective(1500px) rotateY(180deg);
  }
  .cssbk input:checked + span {
    transform: perspective(1500px) rotateY(-180deg);
  }
  .cssbk input:checked + span + span {
    transform: perspective(1500px) rotateY(0deg);
  }
  .note {
    padding: 20px;
    background-color: #fff;
    box-sizing: border-box;
  }
}
